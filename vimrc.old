set nocompatible                  " Must come first because it changes other options.

silent! call pathogen#runtime_append_all_bundles()

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set laststatus=2
set encoding=utf-8                " Set encoding
set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.
set backspace=indent,eol,start    " Intuitive backspacing.
set hidden                        " Handle multiple buffers better.
set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.
set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.
set smarttab                      " insert tabs on the start of a line according to
" set number                        " Show line numbers.
set ruler                         " Show cursor position.
set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.
set wrap                          " Turn on line wrapping.
" set nowrap
set scrolloff=3                   " Show 3 lines of context around the cursor.
set title                         " Set the terminal's title
set visualbell                    " No beeping.
set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set noswapfile
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs
set colorcolumn=80
set autoindent                   " always set autoindenting on
set copyindent                   " copy the previous indentation on autoindenting
set showmatch                    " set show matching parenthesis
set pastetoggle=<F2>

" Set extra options when running in GUI mode
if has("gui_running")
  set list
  " set listchars=tab:▸\\ ,eol:¬
  set listchars=nbsp:¬,eol:¬,tab:>-,extends:»,precedes:«,trail:»

  set antialias                     " MacVim: smooth fonts.
  set guifont=BitstreamVeraSansMono-Roman:h13            " Font family and font size.
  " set guifont=SourceCodePro-Regular:h14
  set encoding=utf-8                " Use UTF-8 everywhere.
  set guioptions-=T                 " Hide toolbar.
  set lines=60 columns=120          " Window dimensions.
  " Uncomment to use.
  " set guioptions-=r                 " Don't show right scrollbar

  " press esc to remove last search
  nnoremap <esc> :noh<return>
end

" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

set background=dark
colorscheme solarized

:let mapleader = ","

" Switch between the currently open buffer and the previous one,
nnoremap <leader><leader> <c-^>

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" disable arrow keys
" map <up> <nop>
" map <down> <nop>
" map <left> <nop>
" map <right> <nop>
" imap <up> <nop>
" imap <down> <nop>
" imap <left> <nop>
" imap <right> <nop>

nnoremap <leader>a :Ack
nnoremap <leader>A :Ack!

" window splits
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <leader>s <C-w>s<C-w>l
" nnoremap <C-h> <C-w>h
" nnoremap <C-j> <C-w>j
" nnoremap <C-k> <C-w>k
" nnoremap <C-l> <C-w>l

" Navigarte with hyper key in window splits
map <M-C-D-S-left> <esc><C-w>h
map <M-C-D-S-down> <esc><C-w>j
map <M-C-D-S-up> <esc><C-w>k
map <M-C-D-S-right> <esc><C-w>l

" NERDTREE
nmap ,n :NERDTreeFind<CR>
nmap ,m :NERDTreeToggle<CR>

"Invisible character colors
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59
highlight Cursor guibg=green 


" remove trailing whitespace with F5
:nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\\\\s\\\\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Remember last location in file
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

function s:setupWrapping()
  set wrap
  set wrapmargin=2
  set textwidth=72
endfunction

function s:setupMarkup()
  call s:setupWrapping()
  map <buffer> <Leader>p :Hammer<CR>
endfunction

" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
au BufRead,BufNewFile {Capfile,Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

" md, markdown, and mk are markdown and define buffer-local preview
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

" add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

au BufRead,BufNewFile *.txt call s:setupWrapping()


let g:syntastic_mode_map = { 'mode': 'passive' }

" Ruby Conque & Fast-spec Aware RSpec Finder

" https://github.com/skwp/vim-ruby-conque
let g:ruby_conque_rspec_runner='spring rspec'

" Cmd-Shift-R for RSpec
nmap <silent> <D-R> :call RunRspecCurrentFileConque()<CR>
" Cmd-Shift-L for RSpec Current Line
nmap <silent> <D-L> :call RunRspecCurrentLineConque()<CR>
" Cmd-Shift-A for Last conque command
nmap <silent> <D-A> :call RunLastConqueCommand()<CR>


highlight clear SignColumn
